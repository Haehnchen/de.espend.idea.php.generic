<idea-plugin>
  <id>de.espend.idea.php.generics</id>
  <name>PHPStan / Psalm / Generics</name>
  <version>0.7.0</version>
  <vendor email="daniel@espendiller.net" url="https://github.com/Haehnchen/idea-php-generics-plugin">espend_de</vendor>

  <description><![CDATA[
    <p>Provide additional support for PHPStan, Psalm and Generics related PHP features</p>

    !!! Work in progress !!!

    <h2>Supported syntax</h2>

    <ul>
      <li><a href="https://github.com/phpstan/phpstan">PHPstan</a></li>
      <li><a href="https://psalm.dev">psalm.dev</a></li>
    </ul>

    <h2>Features</h2>
    <ul>
      <li>class-string parameter inspection</li>
      <li>Array-Types: Object-like arrays</li>
      <li>Inspection for readonly access on property based on @psalm-readonly and @psalm-immutable tag</li>
      <li>class-string template return type detection</li>
      <li>PHPStan and Psalm quality tool support to show report result directly in IDE</li>
    </ul>

  ]]></description>

  <idea-version since-build="201.6668"/>

  <extensions defaultExtensionNs="com.intellij">
    <fileBasedIndex implementation="de.espend.idea.php.generics.indexer.TemplateAnnotationIndex"/>


    <localInspection groupPath="PHP,Generics" shortName="ClassStringLocalInspection" displayName="Class-string expected"
                     groupName="Class"
                     enabledByDefault="true" level="WARNING"
                     language="PHP"
                     implementationClass="de.espend.idea.php.generics.inspection.ClassStringLocalInspection"/>

    <localInspection groupPath="PHP,Generics" shortName="PsalmLocalImmutableInspection" displayName="Psalm Local Immutable"
                     groupName="Class"
                     enabledByDefault="true" level="WARNING"
                     language="PHP"
                     implementationClass="de.espend.idea.php.generics.inspection.PsalmLocalImmutableInspection"/>

    <completion.contributor language="PHP" implementationClass="de.espend.idea.php.generics.CompletionNavigationProvider$Completion"/>
    <gotoDeclarationHandler implementation="de.espend.idea.php.generics.CompletionNavigationProvider$GotoDeclaration"/>

    <!-- PHPStan quality tool support -->
    <applicationService serviceImplementation="de.espend.idea.php.quality.phpstan.configuration.PhpStanValidatorConfigurationManager$AppPhpStanValidatorConfigurationBaseManager"/>
    <projectService serviceImplementation="de.espend.idea.php.quality.phpstan.configuration.PhpStanValidatorConfigurationManager"/>
    <projectService serviceImplementation="de.espend.idea.php.quality.phpstan.configuration.PhpStanValidatorConfigurationManager$ProjectPhpStanValidatorConfigurationBaseManager"/>
    <externalAnnotator language="PHP" implementationClass="de.espend.idea.php.quality.phpstan.PhpStanAnnotatorQualityToolAnnotator"/>
    <projectService serviceImplementation="de.espend.idea.php.quality.phpstan.configuration.PhpStanValidatorProjectConfiguration"/>
    <projectService serviceImplementation="de.espend.idea.php.quality.phpstan.blacklist.PhpStanValidatorBlackList"/>
    <localInspection language="PHP"
                     shortName="PhpStanFixerValidation"
                     displayName="PHPStan validation"
                     groupPath="PHP"
                     groupName="Quality tools"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     cleanupTool="true"
                     implementationClass="de.espend.idea.php.quality.phpstan.PhpStanFixerValidationInspection"/>

    <!-- Psalm quality tool support -->
    <applicationService serviceImplementation="de.espend.idea.php.quality.psalm.configuration.PsalmValidatorConfigurationManager$AppPsalmValidatorConfigurationBaseManager"/>
    <projectService serviceImplementation="de.espend.idea.php.quality.psalm.configuration.PsalmValidatorConfigurationManager"/>
    <projectService serviceImplementation="de.espend.idea.php.quality.psalm.configuration.PsalmValidatorConfigurationManager$ProjectPsalmValidatorConfigurationBaseManager"/>
    <externalAnnotator language="PHP" implementationClass="de.espend.idea.php.quality.psalm.PsalmAnnotatorQualityToolAnnotator"/>
    <projectService serviceImplementation="de.espend.idea.php.quality.psalm.configuration.PsalmValidatorProjectConfiguration"/>
    <projectService serviceImplementation="de.espend.idea.php.quality.psalm.blacklist.PsalmValidatorBlackList"/>
    <localInspection language="PHP"
                     shortName="PsalmValidation"
                     displayName="Psalm validation"
                     groupPath="PHP"
                     groupName="Quality tools"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     cleanupTool="true"
                     implementationClass="de.espend.idea.php.quality.psalm.PsalmValidationInspection"/>
  </extensions>

  <extensionPoints>
    <extensionPoint qualifiedName="de.espend.idea.php.quality.phpstan.phpStanConfigurationProvider" interface="de.espend.idea.php.quality.phpstan.configuration.PhpStanValidatorConfigurationProvider"/>
    <extensionPoint qualifiedName="de.espend.idea.php.quality.psalm.psalmConfigurationProvider" interface="de.espend.idea.php.quality.psalm.configuration.PsalmValidatorConfigurationProvider"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.jetbrains.php">
    <typeProvider4 implementation="de.espend.idea.php.generics.type.TemplateAnnotationTypeProvider"/>

    <!-- PHPStan quality tool support -->
    <tools.quality.type implementation="de.espend.idea.php.quality.phpstan.PhpStanQualityToolType"/>
    <tools.projectConfigurableForm instance="de.espend.idea.php.quality.phpstan.form.PhpStanValidatorConfigurable"/>
    <config.interpreters.PhpInterpretersStateListener implementation="de.espend.idea.php.quality.phpstan.configuration.PhpStanValidatorConfigurationManager"/>

    <!-- Psalm quality tool support -->
    <tools.quality.type implementation="de.espend.idea.php.quality.psalm.PsalmQualityToolType"/>
    <tools.projectConfigurableForm instance="de.espend.idea.php.quality.psalm.form.PsalmValidatorConfigurable"/>
    <config.interpreters.PhpInterpretersStateListener implementation="de.espend.idea.php.quality.psalm.configuration.PsalmValidatorConfigurationManager"/>
  </extensions>

  <actions>
    <!-- Add your actions here -->
  </actions>

  <depends>com.intellij.modules.platform</depends>
  <depends>de.espend.idea.php.annotation</depends>
  <depends optional="true" config-file="phpstorm-remote-interpreter.xml">org.jetbrains.plugins.phpstorm-remote-interpreter</depends>
</idea-plugin>
